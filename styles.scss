@import "fonts.scss";
@mixin ScalingFont($_maxFontSize, $_minFontSize, $_targetScreenSize: 1400) {
  $scalingFactor: calc($_maxFontSize / $_targetScreenSize) * 100vw;
  font-size: clamp(
    calc($_minFontSize / 16 * 1rem),
    calc($scalingFactor + 2vw),
    calc($_maxFontSize / 16 * 1rem)
  );
}

$paddingInline: 2rem;
$contentMaxWidth: calc(1100rem / 16);
$breakoutMaxWidth: calc(1400rem / 16);
$mobileBreakpoint: calc(1000rem / 16);

:root {
  font-family: Lato;
  --colorLight: #fff;
  --colorLightGrey: #8c9597;
  --colorDark: #1d2130;
  --colorDarker: #0b0706;
  --colorPrimary: #32b4ec;
  --colorSectionDark: #1f3136;
  --sectionGap: 4rem;
  color: var(--colorDark);
  line-height: 1.2;
  @media (max-width: 1000px) {
    --sectionGap: 2rem;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

.mainGrid {
  --padding-inline: #{$paddingInline};
  --content-max-width: #{$contentMaxWidth};
  --breakout-max-width: #{$breakoutMaxWidth};
  --breakout-min-width: 0rem;
  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );
  --content-size: min(
    100% - var(--padding-inline) * 2,
    var(--content-max-width)
  );
  --fullWidth-size: minmax(calc(var(--padding-inline) / 2), 1fr);
  grid-template-columns:
    [fullWidth-start] var(--fullWidth-size) [breakout-start] minmax(
      var(--breakout-min-width),
      var(--breakout-size)
    )
    [content-start] calc(var(--content-size)) [content-end] minmax(
      var(--breakout-min-width),
      var(--breakout-size)
    )
    [breakout-end] var(--fullWidth-size)
    [fullWidth-end];
  display: grid;
}

.breakout {
  grid-column: breakout;
}
.content {
  grid-column: content;
}
.fullWidth {
  grid-column: fullWidth;
}
.content-fullWidth {
  grid-column: content;
  @media (min-width: #{$breakoutMaxWidth}) {
    grid-column-start: content-start;
    grid-column-end: fullWidth-end;
  }
}
.breakout-content {
  grid-column: breakout;
  @media (min-width: #{$breakoutMaxWidth}) {
    grid-column-start: breakout-start;
    grid-column-end: content-end;
  }
}
.contentEnd-fullWidth {
  grid-column: content;
  @media (min-width: #{$breakoutMaxWidth}) {
    grid-column-start: content-end;
    grid-column-end: fullWidth-end;
  }
}
.fullWidth-contentStart {
  grid-column-start: fullWidth-start;
  grid-column-end: content-start;
  grid-template-columns: subgrid;
}
.fullWidth-content {
  grid-column: fullWidth;
  grid-template-columns: subgrid;
  display: grid;
  @media (min-width: #{$breakoutMaxWidth}) {
    grid-column-start: fullWidth-start;
    grid-column-end: content-end;
  }
}
body {
  min-width: 320px;
  min-height: 100vh;
}

main > section {
  margin-block: var(--sectionGap);
}
main > section:first-of-type {
  margin-block-start: 0;
}

.h1 {
  @include ScalingFont(50, 32, 1440);
  font-weight: 400;
}
p {
  margin-block: 2rem;
  @include ScalingFont(20, 16, 1440);
}
ul {
  @include ScalingFont(20, 16, 1440);
  margin-inline-start: 1.25rem;
  li {
    margin-block: 0.75rem;
  }
}
ol {
  margin-inline-start: 1.25rem;
  @include ScalingFont(20, 16, 1440);
  ::marker {
    font-weight: 600;
    @include ScalingFont(20, 16, 1440);
  }
  li {
    margin-block: 1rem;
  }
  ul {
    margin-inline-start: 1.75rem;
    list-style-type: disc;
    li {
      margin-block: 0.5rem;
    }
  }
}
strong {
  @include ScalingFont(20, 16, 1440);
}
.banner {
  min-height: 100vh;
  width: 100vw;
  overflow-x: hidden;
  color: white;
  text-align: center;
  display: grid;
  place-content: center;
  h1 {
    @include ScalingFont(105.53, 24, 1440);
    font-weight: 700;
    // line-height: minmax(24px, 36px);
  }
  h2 {
    @include ScalingFont(52, 18, 1440);
    font-weight: 300;
  }
}

.iframeContainer {
  background: #000;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -99;
  min-height: 100vh;
  width: 100%;
  max-height: 100vh;
  max-width: 100vw;
  overflow: hidden;
}
.iframeContainer iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  filter: brightness(0.3);
}
@media (min-aspect-ratio: 16 / 9) {
  .iframeContainer iframe {
    height: 300%;
    top: -100%;
  }
}
@media (max-width: 768px) {
  .iframeContainer iframe {
    width: 178vh;
    height: 100%;
  }
}

.imgWrapper {
  height: auto;
  width: 100%;
  align-content: center;
  // display: grid;
  // place-content: center;
  img {
    width: 100%;
    height: auto;
  }
}

.historicalGrid {
  display: grid;
  gap: 2rem;

  @media (min-width: #{$mobileBreakpoint}) {
    grid-template-columns: 2fr 3fr;
  }
  @media (max-width: #{$mobileBreakpoint}) {
    .imgWrapper {
      order: -1;
    }
  }
}

.originGrid {
  display: grid;
  gap: 2rem;
  @media (min-width: #{$mobileBreakpoint}) {
    text-align: right;
    grid-template-columns: 1fr 2fr;
  }
  .txtWrapper {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 2rem;
    p {
      margin-block: 0;
    }
  }
}

.text-right {
  @media (min-width: #{$mobileBreakpoint}) {
    text-align: right;
  }
}

.h1.boldsmallcenter {
  font-weight: 700;
  @include ScalingFont(38, 28, 1440);
  text-align: center;
}

.bgGrey {
  background-color: #f9f9f9;
}

.sectionPadding {
  padding-block: var(--sectionGap);
}

.greyDisplacedImg {
  @media (min-width: #{$breakoutMaxWidth}) {
    margin-block-end: 15%;
  }
  .content {
    position: relative;
    .txtWrapper {
      @media (min-width: #{$breakoutMaxWidth}) {
        padding-inline-end: 30%;
      }
      :last-child {
        padding-block: none;
      }
    }
  }
  .imgWrapper {
    height: auto;
  }
  @media (min-width: #{$breakoutMaxWidth}) {
    .imgWrapper {
      height: calc(100% + calc(var(--sectionGap) * 2));
      width: 50%;
      position: absolute;
      right: -25%;
      top: 15%;
      display: grid;
      place-content: unset;
      overflow: hidden;
      img {
        height: 100%;
        object-fit: cover;
      }
    }
  }
}

.bgDifferentGrey {
  background-color: #eee;
}

.grid-1-2 {
  display: grid;
  gap: 2rem;
  @media (min-width: #{$mobileBreakpoint}) {
    grid-template-columns: 1fr 2fr;
  }
}
.grid-2-1 {
  display: grid;
  gap: 2rem;
  @media (min-width: #{$mobileBreakpoint}) {
    grid-template-columns: 2fr 1fr;
  }
}
.grid-3-2 {
  display: grid;
  gap: 2rem;
  @media (min-width: #{$mobileBreakpoint}) {
    grid-template-columns: 3fr 2fr;
  }
}
.grid-3-2.turban {
  display: contents;
  gap: 2rem;
  @media (min-width: #{$mobileBreakpoint}) {
    display: grid;
    grid-template-columns: 3fr 2fr;
  }
  .imgWrapper {
    order: -1;
  }
}
.content:has(.turban) {
  display: flex;
  flex-direction: column;
}
ol.moreInside {
  > li {
    margin-block: 1.25rem;
  }
  strong {
    display: block;
    margin-block-end: 0.25rem;
  }
  ul {
    margin-inline-start: 3rem;
  }
}

.imgWrapper.fullHeight {
  height: 100%;
  img {
    height: 100%;
    object-fit: cover;
  }
}

.breakout-content {
  [class*="grid"] {
    column-gap: 4rem;
    row-gap: 1rem;
  }
}

.imgGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  @media (min-width: #{$mobileBreakpoint}) {
    grid-template-columns: repeat(4, 1fr);
  }
  > * {
    aspect-ratio: 2/3;
    > img {
      height: 100%;
      width: 100%;
      object-fit: cover;
      filter: grayscale(1);
      display: block;
    }
  }
}

.imgWrapper.two-by-three {
  aspect-ratio: 2/3;
  > img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    display: block;
  }
}

.orientalistGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  text-align: center;
  p {
    @include ScalingFont(40, 24, 1440);
  }
}
